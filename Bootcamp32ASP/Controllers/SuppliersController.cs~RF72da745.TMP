using Bootcamp32ASP.Models;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.Mvc;

namespace Bootcamp32ASP.Controllers
{
    public class SuppliersController : Controller
    {
        myContext myContext = new myContext();
        // GET: Supplier
        public ActionResult Index()
        {
            var dtSupp = myContext.tb_m_supplier.ToList();
            return View(dtSupp);
            //var model = new SupplierVM();

            //var dtSupp = myContext.tb_m_supplier.AsEnumerable();
            //model.tb_m_supplier = dtSupp;
        }

        // GET: Supplier/Details/5
        public ActionResult Details(int id)
        {
            var dtSupp = myContext.tb_m_supplier.Where(i => i.id == id).FirstOrDefault();
            return View(dtSupp);
        }

        // GET: Supplier/Create
        public ActionResult Create()
        {
            return View();
        }

        // POST: Supplier/Create
        [HttpPost]
        public ActionResult Create(tb_m_supplier supplier)
        {
            try
            {
                // TODO: Add insert logic here
                tb_m_supplier inSupp = new tb_m_supplier();
                inSupp.Name = supplier.Name;
                inSupp.Email = supplier.Email;
                inSupp.CreateDate = DateTime.Now;
                myContext.tb_m_supplier.Add(inSupp);
                myContext.SaveChanges();
                return RedirectToAction("Index");
            }
            catch
            {
                return View();
            }
        }

        // GET: Supplier/Edit/5
        public ActionResult Edit(int id)
        {
            var etSupp = myContext.tb_m_supplier.Where(i => i.id == id).FirstOrDefault();
            return View(etSupp);
        }

        // POST: Supplier/Edit/5
        [HttpPost]
        public ActionResult Edit(int id, tb_m_supplier supplier)
        {
            try
            {
                // TODO: Add update logic here
                var etSupp = myContext.tb_m_supplier.Where(i => i.id == id).FirstOrDefault();
                etSupp.Name = supplier.Name;
                etSupp.Email = supplier.Name;
                etSupp.CreateDate = DateTime.Now;
                myContext.SaveChanges();
                return RedirectToAction("Index");
            }
            catch
            {
                return View();
            }
        }

        // GET: Supplier/Delete/5
        public ActionResult Delete(int id)
        {
            var deRow = myContext.tb_m_supplier.Where(d => d.id == id).FirstOrDefault();
            return View(deRow);
        }

        // POST: Supplier/Delete/5
        [HttpPost]
        public ActionResult Delete(int id, FormCollection collection)
        {
            try
            {
                // TODO: Add delete logic here
                var deRow = myContext.tb_m_supplier.Where(d => d.id == id).FirstOrDefault();
                myContext.tb_m_supplier.Remove(deRow);
                myContext.SaveChanges();
                return RedirectToAction("Index");
            }
            catch
            {
                return View();
            }
        }
    }
}
